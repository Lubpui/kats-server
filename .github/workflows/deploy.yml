name: Deploy NestJS to Plesk

on:
  push:
    branches:
      - master # หรือ branch ที่ต้องการ deploy

jobs:
  build:
    runs-on: ubuntu-latest
    environment: PLESK_DEPLOYMENT

    steps:
      # 1) Checkout code
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2) Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      # 3) Install dependencies
      - name: Install dependencies
        run: yarn install --frozen-lockfile

      # 4) Build NestJS
      - name: Build NestJS
        run: yarn build
        env:
          MONGO_URI_DEMO: ${{ secrets.MONGO_URI_DEMO }}
          MONGO_URI: ${{ secrets.MONGO_URI }}
          JWT_ISSUER: ${{ secrets.JWT_ISSUER }}
          JWT_EXPIRES: ${{ secrets.JWT_EXPIRES }}
          JWT_REFRESH_EXPIRES: ${{ secrets.JWT_REFRESH_EXPIRES }}
          JWT_ALGORITHM: ${{ secrets.JWT_ALGORITHM }}
          UPLOAD_PATH: ${{ secrets.UPLOAD_PATH }}
          TMP_PATH: ${{ secrets.TMP_PATH }}
          JWT_SIGN_PRIVATE_KEY: ${{ secrets.JWT_SIGN_PRIVATE_KEY }}
          JWT_SIGN_PUBLIC_KEY: ${{ secrets.JWT_SIGN_PUBLIC_KEY }}

      # 5) เก็บ dist + package.json + yarn.lock เป็น artifact
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nestjs-build
          path: |
            dist/
            package.json
            yarn.lock

  deploy:
    runs-on: ubuntu-latest
    needs: build # ให้รอ build เสร็จก่อน
    environment: PLESK_DEPLOYMENT

    steps:
      # 1) โหลด artifact กลับมา
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: nestjs-build

      # 2) Deploy dist ไป Plesk
      - name: Deploy dist to Plesk via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./dist/
          server-dir: /api.gunprotections.com/dist/
          dangerous-clean-slate: true

      # 3) Upload package.json & yarn.lock
      - name: Upload package.json & yarn.lock
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./
          server-dir: /api.gunprotections.com/
          exclude: |
            **/*
            !package.json
            !yarn.lock
